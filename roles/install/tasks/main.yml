---

- name: "Make the tftp_dir"
  file:
    path: "{{ tftp_dir }}"
    state: directory

- name: "Make a directory for the MAC address"
  file:
    path: "{{ tftp_dir }}/{{ mac }}"
    state: directory

- name: "Make a directory for mounting the boot partition"
  file:
    path: "{{ playbook_dir }}/mnt/boot"
    state: directory

- name: "Make a directory for mounting the root partition"
  file:
    path: "{{ playbook_dir }}/mnt/root"
    state: directory

- name: "Extract the zip file"
  unarchive:
    src: "{{ playbook_dir }}/artifacts/{{ download_links[image] | basename }}"
    dest: "{{ playbook_dir }}/artifacts/"
    creates: "{{ playbook_dir }}/artifacts/{{ download_links[image] | basename | replace('.zip','.img') }}"

- name: "Mount the image as a loopback"
  shell: "losetup --find --show --partscan --read-only {{ playbook_dir }}/artifacts/{{ download_links[image] | basename | replace('.zip','.img') }}"
  become: true

- name: "Find the loopback device"
  shell: "losetup -a | grep {{ playbook_dir }}/artifacts/{{ download_links[image] | basename | replace('.zip','.img')}} | cut -d: -f1 | head -1"
  register: loopback

- name: debug print loopback
  debug:
    msg: "{{ loopback.stdout }}"

- name: "Mount the boot partition"
  shell: "mount -o ro {{ loopback.stdout }}p1 {{ playbook_dir }}/mnt/boot"
  become: true

- name: "Mount the root partition"
  shell: "mount -o ro {{ loopback.stdout }}p2 {{ playbook_dir }}/mnt/root"
  become: true

- name: Sleep for a few seconds
  shell: sleep 5

- name: "Unmount the root partition"
  shell: "umount {{ playbook_dir }}/mnt/root"
  become: true

- name: "Unmount the boot partition"
  shell: "umount {{ playbook_dir }}/mnt/boot"
  become: true

- name: "Unmount the image"
  shell: "losetup -d {{ loopback.stdout }}"
  become: true


# - name: "Use parted to determine the start of the boot parition offset"
#   shell: "parted -m {{ playbook_dir }}/artifacts/{{ download_links[image] | basename | replace('.zip','.img') }} unit b print | grep fat32 | cut -d':' -f2 | cut -d'B' -f1"
#   register: boot_partition_offset

# - name: "Use parted to determine the start of the root parition offset"
#   shell: "parted -m {{ playbook_dir }}/artifacts/{{ download_links[image] | basename | replace('.zip','.img') }} unit b print | grep ext4 | cut -d':' -f2 | cut -d'B' -f1"
#   register: root_partition_offset

# - name: Print boot partition offset
#   debug:
#     msg: "{{ boot_partition_offset.stdout }}"

# - name: Print root partition offset
#   debug:
#     msg: "{{ root_partition_offset.stdout }}"

# - name: Mount the boot partition
#   mount:
#     src: "{{ playbook_dir }}/artifacts/{{ download_links[image] | basename | replace('.zip','.img') }}"
#     path: "{{ playbook_dir }}/mnt/boot"
#     fstype: vfat
#     opts: "ro,loop,offset={{ boot_partition_offset.stdout }}"
#     state: mounted
#   become: true

# - name: Mount the root partition
#   mount:
#     src: "{{ playbook_dir }}/artifacts/{{ download_links[image] | basename | replace('.zip','.img') }}"
#     path: "{{ playbook_dir }}/mnt/root"
#     fstype: ext4
#     opts: "ro,loop,offset={{ root_partition_offset.stdout }}"
#     state: mounted
#   become: true